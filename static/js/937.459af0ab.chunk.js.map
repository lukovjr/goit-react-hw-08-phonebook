{"version":3,"file":"static/js/937.459af0ab.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Registration.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Grid, Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\nimport { Notify } from 'notiflix';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    try {\n        await dispatch(register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n        })).unwrap();\n        form.reset();\n        Notify.success('Congrats! You have been registred');\n    } catch (error) {\n        Notify.error('User with this data is already exist')\n    }\n};\n\n\n  return (\n    <Grid templateColumns='repeat(5, 1fr)' gap={6}>\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n    <label>\n      Username\n      <Input type=\"text\" name=\"name\" size={'md'} width={'500px'} borderColor={'#56bd77'}/>\n    </label>\n    <label>\n      Email\n      <Input type=\"email\" name=\"email\"  size={'md'} width={'500px'} borderColor={'#56bd77'}/>\n    </label>\n    <label>\n      Password\n      <Input type=\"password\" name=\"password\" size={'md'} width={'500px'} borderColor={'#56bd77'}/>\n    </label>\n    <Button colorScheme='whatsapp' marginTop={5} type=\"submit\" size={'md'}>Register</Button>\n  </form>\n  </Grid>\n  );\n};","import { Helmet, HelmetProvider} from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggeIn } from 'redux/auth/selectors';\n\nexport default function Register() {\n  const isloggedIn = useSelector(selectIsLoggeIn)\n  return (\n    <HelmetProvider>\n    <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      {!isloggedIn && < RegisterForm />}\n    </HelmetProvider>\n  );\n}","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n"],"names":["RegisterForm","dispatch","useDispatch","handleSubmit","event","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","reset","Notify","templateColumns","gap","onSubmit","autoComplete","I","type","size","width","borderColor","colorScheme","marginTop","Register","isloggedIn","useSelector","selectIsLoggeIn","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","required","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","Grid","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns"],"sourceRoot":""}